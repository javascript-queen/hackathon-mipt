/* empty css             */const p="modulepreload",y=function(n){return"/static/build/"+n},m={},v=function(o,s,f){let u=Promise.resolve();if(s&&s.length>0){const c=document.getElementsByTagName("link"),r=document.querySelector("meta[property=csp-nonce]"),d=r?.nonce||r?.getAttribute("nonce");u=Promise.all(s.map(e=>{if(e=y(e),e in m)return;m[e]=!0;const i=e.endsWith(".css"),h=i?'[rel="stylesheet"]':"";if(!!f)for(let l=c.length-1;l>=0;l--){const a=c[l];if(a.href===e&&(!i||a.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${h}`))return;const t=document.createElement("link");if(t.rel=i?"stylesheet":p,i||(t.as="script",t.crossOrigin=""),t.href=e,d&&t.setAttribute("nonce",d),document.head.appendChild(t),i)return new Promise((l,a)=>{t.addEventListener("load",l),t.addEventListener("error",()=>a(new Error(`Unable to preload CSS for ${e}`)))})}))}return u.then(()=>o()).catch(c=>{const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=c,window.dispatchEvent(r),!r.defaultPrevented)throw c})};function E(n){if(document.readyState!=="loading"){try{n()}catch(s){console.error(s)}return}let o=!1;document.addEventListener("DOMContentLoaded",()=>{o||(o=!0,n())})}const _=async()=>{console.debug("Vite OK."),E(async()=>{document.querySelector(`[${g}]`)&&(await v(()=>import("./react-DhslorjU.js").then(o=>o.b),[])).init()})},g="data-js-component";_();export{v as _,g as r};
